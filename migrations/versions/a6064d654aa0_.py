"""empty message

Revision ID: a6064d654aa0
Revises: tables
Create Date: 2025-02-09 15:57:07.325458

"""
from alembic import op
import sqlalchemy as sa

import os
environment = os.getenv("FLASK_ENV")
SCHEMA = os.environ.get("SCHEMA")

# revision identifiers, used by Alembic.
revision = 'a6064d654aa0'
down_revision = 'tables'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user_subscriptions',
    sa.Column('users', sa.Integer(), nullable=False),
    sa.Column('subscriptions', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['subscriptions'], ['subscriptions.id'], ),
    sa.ForeignKeyConstraint(['users'], ['users.id'], ),
    sa.PrimaryKeyConstraint('users', 'subscriptions')
    )
    with op.batch_alter_table('subscriptions', schema=None) as batch_op:
        batch_op.alter_column('price',
               existing_type=sa.VARCHAR(),
               type_=sa.Float(),
               existing_nullable=False)

    if environment == "production":
        op.execute(f"ALTER TABLE users SET SCHEMA {SCHEMA};")

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('subscriptions', schema=None) as batch_op:
        batch_op.alter_column('price',
               existing_type=sa.Float(),
               type_=sa.VARCHAR(),
               existing_nullable=False)

    op.drop_table('user_subscriptions')
    # ### end Alembic commands ###
